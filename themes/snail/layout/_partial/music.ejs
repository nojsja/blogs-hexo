<!-- Loading CSS -->
<style type="text/css">
    .aplayer-container {
        text-align: center;
    }

    .lds-roller-loading {
        display: inline-block;
        position: relative;
        width: 80px;
        height: 80px;
    }

    .lds-roller-loading div {
        animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
        transform-origin: 40px 40px;
    }

    .lds-roller-loading div:after {
        content: " ";
        display: block;
        position: absolute;
        width: 7px;
        height: 7px;
        border-radius: 50%;
        background: #ff59ac;
        margin: -4px 0 0 -4px;
    }

    .lds-roller-loading div:nth-child(1) {
        animation-delay: -0.036s;
    }

    .lds-roller-loading div:nth-child(1):after {
        top: 63px;
        left: 63px;
    }

    .lds-roller-loading div:nth-child(2) {
        animation-delay: -0.072s;
    }

    .lds-roller-loading div:nth-child(2):after {
        top: 68px;
        left: 56px;
    }

    .lds-roller-loading div:nth-child(3) {
        animation-delay: -0.108s;
    }

    .lds-roller-loading div:nth-child(3):after {
        top: 71px;
        left: 48px;
    }

    .lds-roller-loading div:nth-child(4) {
        animation-delay: -0.144s;
    }

    .lds-roller-loading div:nth-child(4):after {
        top: 72px;
        left: 40px;
    }

    .lds-roller-loading div:nth-child(5) {
        animation-delay: -0.18s;
    }

    .lds-roller-loading div:nth-child(5):after {
        top: 71px;
        left: 32px;
    }

    .lds-roller-loading div:nth-child(6) {
        animation-delay: -0.216s;
    }

    .lds-roller-loading div:nth-child(6):after {
        top: 68px;
        left: 24px;
    }

    .lds-roller-loading div:nth-child(7) {
        animation-delay: -0.252s;
    }

    .lds-roller-loading div:nth-child(7):after {
        top: 63px;
        left: 17px;
    }

    .lds-roller-loading div:nth-child(8) {
        animation-delay: -0.288s;
    }

    .lds-roller-loading div:nth-child(8):after {
        top: 56px;
        left: 12px;
    }

    @keyframes lds-roller {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }

    .aplayer .aplayer-pic .aplayer-pause svg {
        top: 0px;
        left: 0px;
    }

    .aplayer .aplayer-pic .aplayer-play svg {
        top: 0px;
        left: 2px;
    }
</style>

<!-- HTML -->

<div class="aplayer-container">
    <div id="aplayer"
         class="lds-roller-loading"
         lazy-css-href="https://unpkg.com/aplayer@1.10.1/dist/APlayer.min.css"
         lazy-js-src="https://unpkg.com/aplayer@1.10.1/dist/APlayer.min.js"
    >
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
        <div></div>
    </div>
</div>

<!-- Main Script -->
<script>

    (function() {
        var musicPlayer = document.querySelector('#aplayer');
        var apobserver;
    
        /* load player */
        var apcallback = function () {
            if (apobserver) apobserver.disconnect();
            musicPlayer.className = "";
            musicPlayer.innerHTML = "";
            var ap = new APlayer({
                container: document.getElementById('aplayer'),
                theme: '#e9e9e9',
                audio: [{
                    name: '存在信号',
                    artist: 'AcuticNotes',
                    url: 'http://nojsja.github.io/static-resources/audio/life-signal.mp3',
                    cover: 'http://nojsja.github.io/static-resources/audio/life-signal.jpg'
    
                }, {
                    name: '遺サレタ場所／斜光',
                    artist: '岡部啓一',
                    url: 'http://nojsja.github.io/static-resources/audio/%E6%96%9C%E5%85%89.mp3',
                    cover: 'http://nojsja.github.io/static-resources/audio/%E6%96%9C%E5%85%89.jpg'
                }]
            });
        };
    
        /* get player resources */
        var apinit = function (cssHref, jsSrc) {
            var sources = [];
            cssHref && (sources.push(cssHref));
            jsSrc && (sources.push(jsSrc));
    
            sources.forEach(function (source) {
                async(source, function () {
                    if (/^.*.js$/.test(source)) {
                        apcallback();
                    }
                }, /^.*.css$/.test(source) ? 'link' : 'script');
            });
    
        }
    
    
        /* scroll listener */
        if (window.IntersectionObserver) {
    
            apobserver = new IntersectionObserver(function (entrys) {
    
                entrys.forEach(function (entry) {
                    if (!entry.isIntersecting) return;
                    apobserver.unobserve(entry.target);
    
                    var sources = [];
                    var cssHref = entry.target.getAttribute('lazy-css-href');
                    var jsSrc = entry.target.getAttribute('lazy-js-src');
    
                    apinit(cssHref, jsSrc);
    
                });
            });
    
            apobserver.observe(musicPlayer);
    
        } else {
    
            var cssHref = musicPlayer.getAttribute('lazy-css-href');
            var jsSrc = musicPlayer.getAttribute('lazy-js-src');
    
            apinit(cssHref, jsSrc);
    
        }

    }.bind(window))();

</script>